
@model eHotel.Models.MultiRoomBooking

@{
    ViewBag.Title = "Booking";
    var Vnd = Decimal.ToInt32(Model.room.Price);
}



<div class="col-md-6">
    <h2>Details</h2>

    <div>
        <h4>Room</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.room.Type.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.room.Type.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.room.RoomNumber)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.room.RoomNumber)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.room.Image)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.room.Image)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.room.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.room.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.room.Price)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.room.Price)
            </dd>

        </dl>
    </div>
</div>
<div class="col-md-6">
    <h2>Booking</h2>
    @using (Html.BeginForm("Booking", "BookingUser", FormMethod.Post))
    {
        @Html.AntiForgeryToken()


<div class="form-horizontal">
    <h4>Booking</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.booking.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.booking.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.booking.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.booking.Cmnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.booking.Cmnd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.booking.Cmnd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.booking.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.booking.Tel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.booking.Tel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.booking.CheckIn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.booking.CheckIn, new { htmlAttributes = new { @class = "form-control", @type = "date", @min = DateTime.Today.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.booking.CheckIn, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.booking.CheckOut, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.booking.CheckOut, new { htmlAttributes = new { @class = "form-control", @type = "date", @min = Model.booking.CheckOut.Value.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.booking.CheckOut, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.booking.Total, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.booking.Total, new { htmlAttributes = new { @class = "form-control", @type = "number", @Value = Vnd } })*@
            <h4>
                <b id="Booking_Total">@Vnd  </b>
            </h4>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.booking.Room, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.booking.RoomId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = Model.booking.Room.Id } })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }
</div>
<script>
    document.getElementById('Booking_Total').innerHTML = formatNumber(@Vnd);

    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();
        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;
        return [year, month, day].join('-');
    }
    function formatNumber(num) {
        return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
    }
    const getE = document.querySelector("#booking_CheckIn");


    const getO = document.querySelector("#booking_CheckOut");
    getE.addEventListener("change", (event) => {
        var enteredDate = new Date(event.target.value);
        enteredDate.setDate(enteredDate.getDate() + 1);
        var minx = formatDate(enteredDate)
        document.getElementById('booking_CheckOut').setAttribute('min', minx);
        document.getElementById('booking_CheckOut').value = minx;
        var Cin = new Date(document.getElementById('booking_CheckIn').value);
        var Cout = new Date(document.getElementById('booking_CheckOut').value);
        var total = (Cout - Cin) / 86400000 *@Vnd;
        console.log("ok")
        document.getElementById('Booking_Total').innerHTML = formatNumber(total);

    })
    getO.addEventListener("change", (event) => {;
        var Cin = new Date(document.getElementById('booking_CheckIn').value);
        var Cout = new Date(document.getElementById('booking_CheckOut').value);
        var total = (Cout - Cin) / 86400000 *@Vnd;
        document.getElementById('Booking_Total').innerHTML = formatNumber(total);
        console.log()


    })
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

